pipeline {
    agent any

    environment {
        NETLIFY_SITE_ID = 'df7bc3b7-664f-4ac6-8028-252e6bb64850'
        NETLIFY_AUTH_TOKEN = credentials('netilfy-token')
        BUILD_DIR = 'build'
    }

    stages {

        stage('Checkout') {
            steps {
                echo 'Checking out code from repository...'
                checkout scm
            }
        }

        stage('Build') {
            agent {
                docker {
                    image 'nginx:latest'
                    reuseNode true
                }
            }
            steps {
                echo 'Building static site...'

                // Copier directement les fichiers dans le répertoire de travail Nginx
                sh '''
                    mkdir -p dist
                    cp -r src/* build/
                    ls -la
                    echo "Static site built successfully."

                    # Copier les fichiers dans le répertoire Nginx
                    cp -r build/* /usr/share/nginx/html/
                    ls -la
                '''
            }
        }

        stage('Deploy') {
            agent {
                docker {
                    image 'nginx:latest'
                    reuseNode true
                }
            }
            steps {
                script {
                    echo 'Installing Netlify CLI...'
                    sh 'npm install -g netlify-cli'
                    
                    echo 'Netlify CLI version:'
                    sh 'netlify --version'

                    echo 'Deploying to Netlify...'
                    sh '''
                        netlify deploy --dir=${BUILD_DIR} --prod --site=${NETLIFY_SITE_ID} --auth ${NETLIFY_AUTH_TOKEN}
                    '''

                    echo 'Testing Nginx configuration before restart...'
                    sh 'nginx -t'

                    echo 'Starting Nginx...'
                    sh '''
                        cp -r ${BUILD_DIR}/* /usr/share/nginx/html/
                        nginx -g "daemon off;"
                    '''
                }
            }
        }

    }
}
